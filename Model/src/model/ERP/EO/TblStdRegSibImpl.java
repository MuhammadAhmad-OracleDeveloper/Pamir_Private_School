package model.ERP.EO;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Mar 18 23:21:24 PDT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TblStdRegSibImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        StdRegId,
        SibStdRegId,
        GradeId,
        SectionsId,
        Ast,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy,
        Dob,
        SchoolName,
        SibName,
        TblGrade,
        TblStdReg,
        TblSections,
        TblStdReg1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int ID = AttributesEnum.Id.index();
    public static final int STDREGID = AttributesEnum.StdRegId.index();
    public static final int SIBSTDREGID = AttributesEnum.SibStdRegId.index();
    public static final int GRADEID = AttributesEnum.GradeId.index();
    public static final int SECTIONSID = AttributesEnum.SectionsId.index();
    public static final int AST = AttributesEnum.Ast.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int DOB = AttributesEnum.Dob.index();
    public static final int SCHOOLNAME = AttributesEnum.SchoolName.index();
    public static final int SIBNAME = AttributesEnum.SibName.index();
    public static final int TBLGRADE = AttributesEnum.TblGrade.index();
    public static final int TBLSTDREG = AttributesEnum.TblStdReg.index();
    public static final int TBLSECTIONS = AttributesEnum.TblSections.index();
    public static final int TBLSTDREG1 = AttributesEnum.TblStdReg1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TblStdRegSibImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.ERP.EO.TblStdRegSib");
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public BigDecimal getId() {
        return (BigDecimal) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(BigDecimal value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for StdRegId, using the alias name StdRegId.
     * @return the value of StdRegId
     */
    public BigDecimal getStdRegId() {
        return (BigDecimal) getAttributeInternal(STDREGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for StdRegId.
     * @param value value to set the StdRegId
     */
    public void setStdRegId(BigDecimal value) {
        setAttributeInternal(STDREGID, value);
    }

    /**
     * Gets the attribute value for SibStdRegId, using the alias name SibStdRegId.
     * @return the value of SibStdRegId
     */
    public BigDecimal getSibStdRegId() {
        return (BigDecimal) getAttributeInternal(SIBSTDREGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SibStdRegId.
     * @param value value to set the SibStdRegId
     */
    public void setSibStdRegId(BigDecimal value) {
        setAttributeInternal(SIBSTDREGID, value);
    }

    /**
     * Gets the attribute value for GradeId, using the alias name GradeId.
     * @return the value of GradeId
     */
    public BigDecimal getGradeId() {
        return (BigDecimal) getAttributeInternal(GRADEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GradeId.
     * @param value value to set the GradeId
     */
    public void setGradeId(BigDecimal value) {
        setAttributeInternal(GRADEID, value);
    }

    /**
     * Gets the attribute value for SectionsId, using the alias name SectionsId.
     * @return the value of SectionsId
     */
    public BigDecimal getSectionsId() {
        return (BigDecimal) getAttributeInternal(SECTIONSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SectionsId.
     * @param value value to set the SectionsId
     */
    public void setSectionsId(BigDecimal value) {
        setAttributeInternal(SECTIONSID, value);
    }

    /**
     * Gets the attribute value for Ast, using the alias name Ast.
     * @return the value of Ast
     */
    public String getAst() {
        return (String) getAttributeInternal(AST);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ast.
     * @param value value to set the Ast
     */
    public void setAst(String value) {
        setAttributeInternal(AST, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Number getCreatedBy() {
        return (Number) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public Number getUpdatedBy() {
        return (Number) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(Number value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for Dob, using the alias name Dob.
     * @return the value of Dob
     */
    public Timestamp getDob() {
        return (Timestamp) getAttributeInternal(DOB);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dob.
     * @param value value to set the Dob
     */
    public void setDob(Timestamp value) {
        setAttributeInternal(DOB, value);
    }

    /**
     * Gets the attribute value for SchoolName, using the alias name SchoolName.
     * @return the value of SchoolName
     */
    public String getSchoolName() {
        return (String) getAttributeInternal(SCHOOLNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for SchoolName.
     * @param value value to set the SchoolName
     */
    public void setSchoolName(String value) {
        setAttributeInternal(SCHOOLNAME, value);
    }

    /**
     * Gets the attribute value for SibName, using the alias name SibName.
     * @return the value of SibName
     */
    public String getSibName() {
        return (String) getAttributeInternal(SIBNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for SibName.
     * @param value value to set the SibName
     */
    public void setSibName(String value) {
        setAttributeInternal(SIBNAME, value);
    }

    /**
     * @return the associated entity TblGradeImpl.
     */
    public TblGradeImpl getTblGrade() {
        return (TblGradeImpl) getAttributeInternal(TBLGRADE);
    }

    /**
     * Sets <code>value</code> as the associated entity TblGradeImpl.
     */
    public void setTblGrade(TblGradeImpl value) {
        setAttributeInternal(TBLGRADE, value);
    }

    /**
     * @return the associated entity TblStdRegImpl.
     */
    public TblStdRegImpl getTblStdReg() {
        return (TblStdRegImpl) getAttributeInternal(TBLSTDREG);
    }

    /**
     * Sets <code>value</code> as the associated entity TblStdRegImpl.
     */
    public void setTblStdReg(TblStdRegImpl value) {
        setAttributeInternal(TBLSTDREG, value);
    }

    /**
     * @return the associated entity TblSectionsImpl.
     */
    public TblSectionsImpl getTblSections() {
        return (TblSectionsImpl) getAttributeInternal(TBLSECTIONS);
    }

    /**
     * Sets <code>value</code> as the associated entity TblSectionsImpl.
     */
    public void setTblSections(TblSectionsImpl value) {
        setAttributeInternal(TBLSECTIONS, value);
    }

    /**
     * @return the associated entity TblStdRegImpl.
     */
    public TblStdRegImpl getTblStdReg1() {
        return (TblStdRegImpl) getAttributeInternal(TBLSTDREG1);
    }

    /**
     * Sets <code>value</code> as the associated entity TblStdRegImpl.
     */
    public void setTblStdReg1(TblStdRegImpl value) {
        setAttributeInternal(TBLSTDREG1, value);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal id) {
        return new Key(new Object[] { id });
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        Number loginId = null;
                 try {
                     loginId = new Number((String) ADFContext.getCurrent().getSessionScope().get("sessRID"));
                 } catch(Exception ex) {
                     ex.printStackTrace();
                 }
                 
                 if (operation == DML_INSERT) {
                     setCreatedBy(loginId);
                     setUpdatedBy(loginId);
                     } else if(operation == DML_UPDATE) {
                     setUpdatedBy(loginId);
                 }
        super.doDML(operation, e);
    }
}

