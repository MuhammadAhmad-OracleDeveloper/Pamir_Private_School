package model.ERP.EO;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Mar 18 23:18:38 PDT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TblStdEnqImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        GroupCompanyId,
        Dated,
        AcadYearId,
        FirstName,
        LastName,
        Gender,
        Dob,
        TotAge,
        GradeId,
        ContPerson,
        ContNumber,
        ContRelation,
        LookupElecGroup,
        Address,
        EmirId,
        EmirArea,
        RegFee,
        Ast,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy,
        CompanySbuId,
        LookupRefBy,
        SectionsId,
        TblEnqFollowUp,
        TblAcadYear,
        TblGrade,
        TblLookupDetail,
        TblStdReg;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int GROUPCOMPANYID = AttributesEnum.GroupCompanyId.index();
    public static final int DATED = AttributesEnum.Dated.index();
    public static final int ACADYEARID = AttributesEnum.AcadYearId.index();
    public static final int FIRSTNAME = AttributesEnum.FirstName.index();
    public static final int LASTNAME = AttributesEnum.LastName.index();
    public static final int GENDER = AttributesEnum.Gender.index();
    public static final int DOB = AttributesEnum.Dob.index();
    public static final int TOTAGE = AttributesEnum.TotAge.index();
    public static final int GRADEID = AttributesEnum.GradeId.index();
    public static final int CONTPERSON = AttributesEnum.ContPerson.index();
    public static final int CONTNUMBER = AttributesEnum.ContNumber.index();
    public static final int CONTRELATION = AttributesEnum.ContRelation.index();
    public static final int LOOKUPELECGROUP = AttributesEnum.LookupElecGroup.index();
    public static final int ADDRESS = AttributesEnum.Address.index();
    public static final int EMIRID = AttributesEnum.EmirId.index();
    public static final int EMIRAREA = AttributesEnum.EmirArea.index();
    public static final int REGFEE = AttributesEnum.RegFee.index();
    public static final int AST = AttributesEnum.Ast.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int COMPANYSBUID = AttributesEnum.CompanySbuId.index();
    public static final int LOOKUPREFBY = AttributesEnum.LookupRefBy.index();
    public static final int SECTIONSID = AttributesEnum.SectionsId.index();
    public static final int TBLENQFOLLOWUP = AttributesEnum.TblEnqFollowUp.index();
    public static final int TBLACADYEAR = AttributesEnum.TblAcadYear.index();
    public static final int TBLGRADE = AttributesEnum.TblGrade.index();
    public static final int TBLLOOKUPDETAIL = AttributesEnum.TblLookupDetail.index();
    public static final int TBLSTDREG = AttributesEnum.TblStdReg.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TblStdEnqImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.ERP.EO.TblStdEnq");
    }


    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public BigDecimal getId() {
        return (BigDecimal) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(BigDecimal value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for GroupCompanyId, using the alias name GroupCompanyId.
     * @return the value of GroupCompanyId
     */
    public Number getGroupCompanyId() {
        return (Number) getAttributeInternal(GROUPCOMPANYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GroupCompanyId.
     * @param value value to set the GroupCompanyId
     */
    public void setGroupCompanyId(Number value) {
        setAttributeInternal(GROUPCOMPANYID, value);
    }

    /**
     * Gets the attribute value for Dated, using the alias name Dated.
     * @return the value of Dated
     */
    public Timestamp getDated() {
        return (Timestamp) getAttributeInternal(DATED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dated.
     * @param value value to set the Dated
     */
    public void setDated(Timestamp value) {
        setAttributeInternal(DATED, value);
    }

    /**
     * Gets the attribute value for AcadYearId, using the alias name AcadYearId.
     * @return the value of AcadYearId
     */
    public BigDecimal getAcadYearId() {
        return (BigDecimal) getAttributeInternal(ACADYEARID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AcadYearId.
     * @param value value to set the AcadYearId
     */
    public void setAcadYearId(BigDecimal value) {
        setAttributeInternal(ACADYEARID, value);
    }

    /**
     * Gets the attribute value for FirstName, using the alias name FirstName.
     * @return the value of FirstName
     */
    public String getFirstName() {
        return (String) getAttributeInternal(FIRSTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for FirstName.
     * @param value value to set the FirstName
     */
    public void setFirstName(String value) {
        setAttributeInternal(FIRSTNAME, value);
    }

    /**
     * Gets the attribute value for LastName, using the alias name LastName.
     * @return the value of LastName
     */
    public String getLastName() {
        return (String) getAttributeInternal(LASTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastName.
     * @param value value to set the LastName
     */
    public void setLastName(String value) {
        setAttributeInternal(LASTNAME, value);
    }

    /**
     * Gets the attribute value for Gender, using the alias name Gender.
     * @return the value of Gender
     */
    public String getGender() {
        return (String) getAttributeInternal(GENDER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Gender.
     * @param value value to set the Gender
     */
    public void setGender(String value) {
        setAttributeInternal(GENDER, value);
    }

    /**
     * Gets the attribute value for Dob, using the alias name Dob.
     * @return the value of Dob
     */
    public Timestamp getDob() {
        return (Timestamp) getAttributeInternal(DOB);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dob.
     * @param value value to set the Dob
     */
    public void setDob(Timestamp value) {
        setAttributeInternal(DOB, value);
    }

    /**
     * Gets the attribute value for TotAge, using the alias name TotAge.
     * @return the value of TotAge
     */
    public String getTotAge() {
        return (String) getAttributeInternal(TOTAGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotAge.
     * @param value value to set the TotAge
     */
    public void setTotAge(String value) {
        setAttributeInternal(TOTAGE, value);
    }

    /**
     * Gets the attribute value for GradeId, using the alias name GradeId.
     * @return the value of GradeId
     */
    public BigDecimal getGradeId() {
        return (BigDecimal) getAttributeInternal(GRADEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GradeId.
     * @param value value to set the GradeId
     */
    public void setGradeId(BigDecimal value) {
        setAttributeInternal(GRADEID, value);
    }

    /**
     * Gets the attribute value for ContPerson, using the alias name ContPerson.
     * @return the value of ContPerson
     */
    public String getContPerson() {
        return (String) getAttributeInternal(CONTPERSON);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContPerson.
     * @param value value to set the ContPerson
     */
    public void setContPerson(String value) {
        setAttributeInternal(CONTPERSON, value);
    }

    /**
     * Gets the attribute value for ContNumber, using the alias name ContNumber.
     * @return the value of ContNumber
     */
    public String getContNumber() {
        return (String) getAttributeInternal(CONTNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContNumber.
     * @param value value to set the ContNumber
     */
    public void setContNumber(String value) {
        setAttributeInternal(CONTNUMBER, value);
    }

    /**
     * Gets the attribute value for ContRelation, using the alias name ContRelation.
     * @return the value of ContRelation
     */
    public BigDecimal getContRelation() {
        return (BigDecimal) getAttributeInternal(CONTRELATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContRelation.
     * @param value value to set the ContRelation
     */
    public void setContRelation(BigDecimal value) {
        setAttributeInternal(CONTRELATION, value);
    }

    /**
     * Gets the attribute value for LookupElecGroup, using the alias name LookupElecGroup.
     * @return the value of LookupElecGroup
     */
    public BigDecimal getLookupElecGroup() {
        return (BigDecimal) getAttributeInternal(LOOKUPELECGROUP);
    }

    /**
     * Sets <code>value</code> as the attribute value for LookupElecGroup.
     * @param value value to set the LookupElecGroup
     */
    public void setLookupElecGroup(BigDecimal value) {
        setAttributeInternal(LOOKUPELECGROUP, value);
    }

    /**
     * Gets the attribute value for Address, using the alias name Address.
     * @return the value of Address
     */
    public String getAddress() {
        return (String) getAttributeInternal(ADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Address.
     * @param value value to set the Address
     */
    public void setAddress(String value) {
        setAttributeInternal(ADDRESS, value);
    }

    /**
     * Gets the attribute value for EmirId, using the alias name EmirId.
     * @return the value of EmirId
     */
    public String getEmirId() {
        return (String) getAttributeInternal(EMIRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmirId.
     * @param value value to set the EmirId
     */
    public void setEmirId(String value) {
        setAttributeInternal(EMIRID, value);
    }

    /**
     * Gets the attribute value for EmirArea, using the alias name EmirArea.
     * @return the value of EmirArea
     */
    public BigDecimal getEmirArea() {
        return (BigDecimal) getAttributeInternal(EMIRAREA);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmirArea.
     * @param value value to set the EmirArea
     */
    public void setEmirArea(BigDecimal value) {
        setAttributeInternal(EMIRAREA, value);
    }

    /**
     * Gets the attribute value for RegFee, using the alias name RegFee.
     * @return the value of RegFee
     */
    public BigDecimal getRegFee() {
        return (BigDecimal) getAttributeInternal(REGFEE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RegFee.
     * @param value value to set the RegFee
     */
    public void setRegFee(BigDecimal value) {
        setAttributeInternal(REGFEE, value);
    }

    /**
     * Gets the attribute value for Ast, using the alias name Ast.
     * @return the value of Ast
     */
    public String getAst() {
        return (String) getAttributeInternal(AST);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ast.
     * @param value value to set the Ast
     */
    public void setAst(String value) {
        setAttributeInternal(AST, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Number getCreatedBy() {
        return (Number) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public Number getUpdatedBy() {
        return (Number) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(Number value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for CompanySbuId, using the alias name CompanySbuId.
     * @return the value of CompanySbuId
     */
    public Number getCompanySbuId() {
        return (Number) getAttributeInternal(COMPANYSBUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CompanySbuId.
     * @param value value to set the CompanySbuId
     */
    public void setCompanySbuId(Number value) {
        setAttributeInternal(COMPANYSBUID, value);
    }

    /**
     * Gets the attribute value for LookupRefBy, using the alias name LookupRefBy.
     * @return the value of LookupRefBy
     */
    public BigDecimal getLookupRefBy() {
        return (BigDecimal) getAttributeInternal(LOOKUPREFBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LookupRefBy.
     * @param value value to set the LookupRefBy
     */
    public void setLookupRefBy(BigDecimal value) {
        setAttributeInternal(LOOKUPREFBY, value);
    }

    /**
     * Gets the attribute value for SectionsId, using the alias name SectionsId.
     * @return the value of SectionsId
     */
    public BigDecimal getSectionsId() {
        return (BigDecimal) getAttributeInternal(SECTIONSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SectionsId.
     * @param value value to set the SectionsId
     */
    public void setSectionsId(BigDecimal value) {
        setAttributeInternal(SECTIONSID, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblEnqFollowUp() {
        return (RowIterator) getAttributeInternal(TBLENQFOLLOWUP);
    }

    /**
     * @return the associated entity TblAcadYearImpl.
     */
    public TblAcadYearImpl getTblAcadYear() {
        return (TblAcadYearImpl) getAttributeInternal(TBLACADYEAR);
    }

    /**
     * Sets <code>value</code> as the associated entity TblAcadYearImpl.
     */
    public void setTblAcadYear(TblAcadYearImpl value) {
        setAttributeInternal(TBLACADYEAR, value);
    }

    /**
     * @return the associated entity TblGradeImpl.
     */
    public TblGradeImpl getTblGrade() {
        return (TblGradeImpl) getAttributeInternal(TBLGRADE);
    }

    /**
     * Sets <code>value</code> as the associated entity TblGradeImpl.
     */
    public void setTblGrade(TblGradeImpl value) {
        setAttributeInternal(TBLGRADE, value);
    }

    /**
     * @return the associated entity TblLookupDetailImpl.
     */
    public TblLookupDetailImpl getTblLookupDetail() {
        return (TblLookupDetailImpl) getAttributeInternal(TBLLOOKUPDETAIL);
    }

    /**
     * Sets <code>value</code> as the associated entity TblLookupDetailImpl.
     */
    public void setTblLookupDetail(TblLookupDetailImpl value) {
        setAttributeInternal(TBLLOOKUPDETAIL, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblStdReg() {
        return (RowIterator) getAttributeInternal(TBLSTDREG);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal id) {
        return new Key(new Object[] { id });
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        Number userId = null;
        Number cmpnyId = null;
        Number sbuId = null;
         try {
             userId = new Number((String) ADFContext.getCurrent().getSessionScope().get("sessUMID"));
             cmpnyId = new Number((String) ADFContext.getCurrent().getSessionScope().get("sessCmpnyID"));
             sbuId = new Number((String) ADFContext.getCurrent().getSessionScope().get("sessSBUID"));
         } catch(Exception ex) {
             ex.printStackTrace();
         }
         
         if (operation == DML_INSERT) {

             setGroupCompanyId(cmpnyId);
             setCompanySbuId(sbuId);

             setCreatedBy(userId);
             setUpdatedBy(userId);
             } else if(operation == DML_UPDATE) {
             
             setGroupCompanyId(cmpnyId);
             setCompanySbuId(sbuId);
             
             setUpdatedBy(userId);
         }
        super.doDML(operation, e);
    }
}

