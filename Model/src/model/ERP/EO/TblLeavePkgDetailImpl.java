package model.ERP.EO;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jun 25 14:16:27 PKT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TblLeavePkgDetailImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        LeavePkgMasterId,
        LeaveTypeId,
        NoOfDays,
        PeriodMonths,
        CalcType,
        ElegAfterDays,
        Ast,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy,
        TblLeavePkgMaster,
        TblLeaveType;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ID = AttributesEnum.Id.index();
    public static final int LEAVEPKGMASTERID = AttributesEnum.LeavePkgMasterId.index();
    public static final int LEAVETYPEID = AttributesEnum.LeaveTypeId.index();
    public static final int NOOFDAYS = AttributesEnum.NoOfDays.index();
    public static final int PERIODMONTHS = AttributesEnum.PeriodMonths.index();
    public static final int CALCTYPE = AttributesEnum.CalcType.index();
    public static final int ELEGAFTERDAYS = AttributesEnum.ElegAfterDays.index();
    public static final int AST = AttributesEnum.Ast.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int TBLLEAVEPKGMASTER = AttributesEnum.TblLeavePkgMaster.index();
    public static final int TBLLEAVETYPE = AttributesEnum.TblLeaveType.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TblLeavePkgDetailImpl() {
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public BigDecimal getId() {
        return (BigDecimal) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(BigDecimal value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for LeavePkgMasterId, using the alias name LeavePkgMasterId.
     * @return the value of LeavePkgMasterId
     */
    public BigDecimal getLeavePkgMasterId() {
        return (BigDecimal) getAttributeInternal(LEAVEPKGMASTERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LeavePkgMasterId.
     * @param value value to set the LeavePkgMasterId
     */
    public void setLeavePkgMasterId(BigDecimal value) {
        setAttributeInternal(LEAVEPKGMASTERID, value);
    }

    /**
     * Gets the attribute value for LeaveTypeId, using the alias name LeaveTypeId.
     * @return the value of LeaveTypeId
     */
    public BigDecimal getLeaveTypeId() {
        return (BigDecimal) getAttributeInternal(LEAVETYPEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LeaveTypeId.
     * @param value value to set the LeaveTypeId
     */
    public void setLeaveTypeId(BigDecimal value) {
        setAttributeInternal(LEAVETYPEID, value);
    }

    /**
     * Gets the attribute value for NoOfDays, using the alias name NoOfDays.
     * @return the value of NoOfDays
     */
    public BigDecimal getNoOfDays() {
        return (BigDecimal) getAttributeInternal(NOOFDAYS);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoOfDays.
     * @param value value to set the NoOfDays
     */
    public void setNoOfDays(BigDecimal value) {
        setAttributeInternal(NOOFDAYS, value);
    }

    /**
     * Gets the attribute value for PeriodMonths, using the alias name PeriodMonths.
     * @return the value of PeriodMonths
     */
    public BigDecimal getPeriodMonths() {
        return (BigDecimal) getAttributeInternal(PERIODMONTHS);
    }

    /**
     * Sets <code>value</code> as the attribute value for PeriodMonths.
     * @param value value to set the PeriodMonths
     */
    public void setPeriodMonths(BigDecimal value) {
        setAttributeInternal(PERIODMONTHS, value);
    }

    /**
     * Gets the attribute value for CalcType, using the alias name CalcType.
     * @return the value of CalcType
     */
    public String getCalcType() {
        return (String) getAttributeInternal(CALCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CalcType.
     * @param value value to set the CalcType
     */
    public void setCalcType(String value) {
        setAttributeInternal(CALCTYPE, value);
    }

    /**
     * Gets the attribute value for ElegAfterDays, using the alias name ElegAfterDays.
     * @return the value of ElegAfterDays
     */
    public BigDecimal getElegAfterDays() {
        return (BigDecimal) getAttributeInternal(ELEGAFTERDAYS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ElegAfterDays.
     * @param value value to set the ElegAfterDays
     */
    public void setElegAfterDays(BigDecimal value) {
        setAttributeInternal(ELEGAFTERDAYS, value);
    }

    /**
     * Gets the attribute value for Ast, using the alias name Ast.
     * @return the value of Ast
     */
    public String getAst() {
        return (String) getAttributeInternal(AST);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ast.
     * @param value value to set the Ast
     */
    public void setAst(String value) {
        setAttributeInternal(AST, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Number getCreatedBy() {
        return (Number) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedDate.
     * @param value value to set the UpdatedDate
     */
    public void setUpdatedDate(Timestamp value) {
        setAttributeInternal(UPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public Number getUpdatedBy() {
        return (Number) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(Number value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * @return the associated entity TblLeavePkgMasterImpl.
     */
    public TblLeavePkgMasterImpl getTblLeavePkgMaster() {
        return (TblLeavePkgMasterImpl) getAttributeInternal(TBLLEAVEPKGMASTER);
    }

    /**
     * Sets <code>value</code> as the associated entity TblLeavePkgMasterImpl.
     */
    public void setTblLeavePkgMaster(TblLeavePkgMasterImpl value) {
        setAttributeInternal(TBLLEAVEPKGMASTER, value);
    }

    /**
     * @return the associated entity TblLeaveTypeImpl.
     */
    public TblLeaveTypeImpl getTblLeaveType() {
        return (TblLeaveTypeImpl) getAttributeInternal(TBLLEAVETYPE);
    }

    /**
     * Sets <code>value</code> as the associated entity TblLeaveTypeImpl.
     */
    public void setTblLeaveType(TblLeaveTypeImpl value) {
        setAttributeInternal(TBLLEAVETYPE, value);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal id) {
        return new Key(new Object[] { id });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.ERP.EO.TblLeavePkgDetail");
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        Number loginId = null;
         try {
             loginId = new Number((String) ADFContext.getCurrent().getSessionScope().get("sessRID"));
         } catch(Exception ex) {
             ex.printStackTrace();
         }
         
         if (operation == DML_INSERT) {
             setCreatedBy(loginId);
             setUpdatedBy(loginId);
             } else if(operation == DML_UPDATE) {
             setUpdatedBy(loginId);
         }
        super.doDML(operation, e);
    }
}

