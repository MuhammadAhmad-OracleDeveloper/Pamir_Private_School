package model.ERP.EO;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Apr 01 12:40:49 PKT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TblFeeGenDetailImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        FeeGenMasterId,
        StdRegId,
        FoundMemberDisc,
        MgtDisc,
        ScholarDisc,
        SiblingDisc,
        StaffDisc,
        NetFee,
        Ast,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy,
        TblFeeGenDetailD,
        TblFeeGenMaster;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ID = AttributesEnum.Id.index();
    public static final int FEEGENMASTERID = AttributesEnum.FeeGenMasterId.index();
    public static final int STDREGID = AttributesEnum.StdRegId.index();
    public static final int FOUNDMEMBERDISC = AttributesEnum.FoundMemberDisc.index();
    public static final int MGTDISC = AttributesEnum.MgtDisc.index();
    public static final int SCHOLARDISC = AttributesEnum.ScholarDisc.index();
    public static final int SIBLINGDISC = AttributesEnum.SiblingDisc.index();
    public static final int STAFFDISC = AttributesEnum.StaffDisc.index();
    public static final int NETFEE = AttributesEnum.NetFee.index();
    public static final int AST = AttributesEnum.Ast.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int TBLFEEGENDETAILD = AttributesEnum.TblFeeGenDetailD.index();
    public static final int TBLFEEGENMASTER = AttributesEnum.TblFeeGenMaster.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TblFeeGenDetailImpl() {
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public BigDecimal getId() {
        return (BigDecimal) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(BigDecimal value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for FeeGenMasterId, using the alias name FeeGenMasterId.
     * @return the value of FeeGenMasterId
     */
    public BigDecimal getFeeGenMasterId() {
        return (BigDecimal) getAttributeInternal(FEEGENMASTERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FeeGenMasterId.
     * @param value value to set the FeeGenMasterId
     */
    public void setFeeGenMasterId(BigDecimal value) {
        setAttributeInternal(FEEGENMASTERID, value);
    }

    /**
     * Gets the attribute value for StdRegId, using the alias name StdRegId.
     * @return the value of StdRegId
     */
    public BigDecimal getStdRegId() {
        return (BigDecimal) getAttributeInternal(STDREGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for StdRegId.
     * @param value value to set the StdRegId
     */
    public void setStdRegId(BigDecimal value) {
        setAttributeInternal(STDREGID, value);
    }

    /**
     * Gets the attribute value for FoundMemberDisc, using the alias name FoundMemberDisc.
     * @return the value of FoundMemberDisc
     */
    public BigDecimal getFoundMemberDisc() {
        return (BigDecimal) getAttributeInternal(FOUNDMEMBERDISC);
    }

    /**
     * Sets <code>value</code> as the attribute value for FoundMemberDisc.
     * @param value value to set the FoundMemberDisc
     */
    public void setFoundMemberDisc(BigDecimal value) {
        setAttributeInternal(FOUNDMEMBERDISC, value);
    }

    /**
     * Gets the attribute value for MgtDisc, using the alias name MgtDisc.
     * @return the value of MgtDisc
     */
    public BigDecimal getMgtDisc() {
        return (BigDecimal) getAttributeInternal(MGTDISC);
    }

    /**
     * Sets <code>value</code> as the attribute value for MgtDisc.
     * @param value value to set the MgtDisc
     */
    public void setMgtDisc(BigDecimal value) {
        setAttributeInternal(MGTDISC, value);
    }

    /**
     * Gets the attribute value for ScholarDisc, using the alias name ScholarDisc.
     * @return the value of ScholarDisc
     */
    public BigDecimal getScholarDisc() {
        return (BigDecimal) getAttributeInternal(SCHOLARDISC);
    }

    /**
     * Sets <code>value</code> as the attribute value for ScholarDisc.
     * @param value value to set the ScholarDisc
     */
    public void setScholarDisc(BigDecimal value) {
        setAttributeInternal(SCHOLARDISC, value);
    }

    /**
     * Gets the attribute value for SiblingDisc, using the alias name SiblingDisc.
     * @return the value of SiblingDisc
     */
    public BigDecimal getSiblingDisc() {
        return (BigDecimal) getAttributeInternal(SIBLINGDISC);
    }

    /**
     * Sets <code>value</code> as the attribute value for SiblingDisc.
     * @param value value to set the SiblingDisc
     */
    public void setSiblingDisc(BigDecimal value) {
        setAttributeInternal(SIBLINGDISC, value);
    }

    /**
     * Gets the attribute value for StaffDisc, using the alias name StaffDisc.
     * @return the value of StaffDisc
     */
    public BigDecimal getStaffDisc() {
        return (BigDecimal) getAttributeInternal(STAFFDISC);
    }

    /**
     * Sets <code>value</code> as the attribute value for StaffDisc.
     * @param value value to set the StaffDisc
     */
    public void setStaffDisc(BigDecimal value) {
        setAttributeInternal(STAFFDISC, value);
    }

    /**
     * Gets the attribute value for NetFee, using the alias name NetFee.
     * @return the value of NetFee
     */
    public BigDecimal getNetFee() {
        return (BigDecimal) getAttributeInternal(NETFEE);
    }

    /**
     * Sets <code>value</code> as the attribute value for NetFee.
     * @param value value to set the NetFee
     */
    public void setNetFee(BigDecimal value) {
        setAttributeInternal(NETFEE, value);
    }

    /**
     * Gets the attribute value for Ast, using the alias name Ast.
     * @return the value of Ast
     */
    public String getAst() {
        return (String) getAttributeInternal(AST);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ast.
     * @param value value to set the Ast
     */
    public void setAst(String value) {
        setAttributeInternal(AST, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Number getCreatedBy() {
        return (Number) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public Number getUpdatedBy() {
        return (Number) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(Number value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblFeeGenDetailD() {
        return (RowIterator) getAttributeInternal(TBLFEEGENDETAILD);
    }

    /**
     * @return the associated entity TblFeeGenMasterImpl.
     */
    public TblFeeGenMasterImpl getTblFeeGenMaster() {
        return (TblFeeGenMasterImpl) getAttributeInternal(TBLFEEGENMASTER);
    }

    /**
     * Sets <code>value</code> as the associated entity TblFeeGenMasterImpl.
     */
    public void setTblFeeGenMaster(TblFeeGenMasterImpl value) {
        setAttributeInternal(TBLFEEGENMASTER, value);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal id) {
        return new Key(new Object[] { id });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.ERP.EO.TblFeeGenDetail");
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        Number userId = null;
         try {
             userId = new Number((String) ADFContext.getCurrent().getSessionScope().get("sessUMID"));
         } catch(Exception ex) {
             ex.printStackTrace();
         }
         
         if (operation == DML_INSERT) {
             
             setCreatedBy(userId);
             setUpdatedBy(userId);
             } else if(operation == DML_UPDATE) {
             
             setUpdatedBy(userId);
         }
        super.doDML(operation, e);
        }
}

