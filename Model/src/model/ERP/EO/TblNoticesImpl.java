package model.ERP.EO;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Mar 18 22:56:56 PDT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TblNoticesImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        GroupCompanyId,
        AcadYearId,
        Dated,
        NoticeDesc,
        StartDate,
        EndDate,
        NoticeType,
        NoticeTeacher,
        NoticeAll,
        NoticeParent,
        NoticeStudent,
        NoticeImage,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy,
        NoticeTitle,
        CompanySbuId,
        TblAcadYear;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int GROUPCOMPANYID = AttributesEnum.GroupCompanyId.index();
    public static final int ACADYEARID = AttributesEnum.AcadYearId.index();
    public static final int DATED = AttributesEnum.Dated.index();
    public static final int NOTICEDESC = AttributesEnum.NoticeDesc.index();
    public static final int STARTDATE = AttributesEnum.StartDate.index();
    public static final int ENDDATE = AttributesEnum.EndDate.index();
    public static final int NOTICETYPE = AttributesEnum.NoticeType.index();
    public static final int NOTICETEACHER = AttributesEnum.NoticeTeacher.index();
    public static final int NOTICEALL = AttributesEnum.NoticeAll.index();
    public static final int NOTICEPARENT = AttributesEnum.NoticeParent.index();
    public static final int NOTICESTUDENT = AttributesEnum.NoticeStudent.index();
    public static final int NOTICEIMAGE = AttributesEnum.NoticeImage.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int NOTICETITLE = AttributesEnum.NoticeTitle.index();
    public static final int COMPANYSBUID = AttributesEnum.CompanySbuId.index();
    public static final int TBLACADYEAR = AttributesEnum.TblAcadYear.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TblNoticesImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.ERP.EO.TblNotices");
    }


    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public BigDecimal getId() {
        return (BigDecimal) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(BigDecimal value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for GroupCompanyId, using the alias name GroupCompanyId.
     * @return the value of GroupCompanyId
     */
    public Number getGroupCompanyId() {
        return (Number) getAttributeInternal(GROUPCOMPANYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GroupCompanyId.
     * @param value value to set the GroupCompanyId
     */
    public void setGroupCompanyId(Number value) {
        setAttributeInternal(GROUPCOMPANYID, value);
    }

    /**
     * Gets the attribute value for AcadYearId, using the alias name AcadYearId.
     * @return the value of AcadYearId
     */
    public BigDecimal getAcadYearId() {
        return (BigDecimal) getAttributeInternal(ACADYEARID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AcadYearId.
     * @param value value to set the AcadYearId
     */
    public void setAcadYearId(BigDecimal value) {
        setAttributeInternal(ACADYEARID, value);
    }

    /**
     * Gets the attribute value for Dated, using the alias name Dated.
     * @return the value of Dated
     */
    public Timestamp getDated() {
        return (Timestamp) getAttributeInternal(DATED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dated.
     * @param value value to set the Dated
     */
    public void setDated(Timestamp value) {
        setAttributeInternal(DATED, value);
    }

    /**
     * Gets the attribute value for NoticeDesc, using the alias name NoticeDesc.
     * @return the value of NoticeDesc
     */
    public String getNoticeDesc() {
        return (String) getAttributeInternal(NOTICEDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoticeDesc.
     * @param value value to set the NoticeDesc
     */
    public void setNoticeDesc(String value) {
        setAttributeInternal(NOTICEDESC, value);
    }

    /**
     * Gets the attribute value for StartDate, using the alias name StartDate.
     * @return the value of StartDate
     */
    public Timestamp getStartDate() {
        return (Timestamp) getAttributeInternal(STARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StartDate.
     * @param value value to set the StartDate
     */
    public void setStartDate(Timestamp value) {
        setAttributeInternal(STARTDATE, value);
    }

    /**
     * Gets the attribute value for EndDate, using the alias name EndDate.
     * @return the value of EndDate
     */
    public Timestamp getEndDate() {
        return (Timestamp) getAttributeInternal(ENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndDate.
     * @param value value to set the EndDate
     */
    public void setEndDate(Timestamp value) {
        setAttributeInternal(ENDDATE, value);
    }

    /**
     * Gets the attribute value for NoticeType, using the alias name NoticeType.
     * @return the value of NoticeType
     */
    public String getNoticeType() {
        return (String) getAttributeInternal(NOTICETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoticeType.
     * @param value value to set the NoticeType
     */
    public void setNoticeType(String value) {
        setAttributeInternal(NOTICETYPE, value);
    }

    /**
     * Gets the attribute value for NoticeTeacher, using the alias name NoticeTeacher.
     * @return the value of NoticeTeacher
     */
    public String getNoticeTeacher() {
        return (String) getAttributeInternal(NOTICETEACHER);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoticeTeacher.
     * @param value value to set the NoticeTeacher
     */
    public void setNoticeTeacher(String value) {
        setAttributeInternal(NOTICETEACHER, value);
    }

    /**
     * Gets the attribute value for NoticeAll, using the alias name NoticeAll.
     * @return the value of NoticeAll
     */
    public String getNoticeAll() {
        return (String) getAttributeInternal(NOTICEALL);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoticeAll.
     * @param value value to set the NoticeAll
     */
    public void setNoticeAll(String value) {
        setAttributeInternal(NOTICEALL, value);
    }

    /**
     * Gets the attribute value for NoticeParent, using the alias name NoticeParent.
     * @return the value of NoticeParent
     */
    public String getNoticeParent() {
        return (String) getAttributeInternal(NOTICEPARENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoticeParent.
     * @param value value to set the NoticeParent
     */
    public void setNoticeParent(String value) {
        setAttributeInternal(NOTICEPARENT, value);
    }

    /**
     * Gets the attribute value for NoticeStudent, using the alias name NoticeStudent.
     * @return the value of NoticeStudent
     */
    public String getNoticeStudent() {
        return (String) getAttributeInternal(NOTICESTUDENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoticeStudent.
     * @param value value to set the NoticeStudent
     */
    public void setNoticeStudent(String value) {
        setAttributeInternal(NOTICESTUDENT, value);
    }

    /**
     * Gets the attribute value for NoticeImage, using the alias name NoticeImage.
     * @return the value of NoticeImage
     */
    public String getNoticeImage() {
        return (String) getAttributeInternal(NOTICEIMAGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoticeImage.
     * @param value value to set the NoticeImage
     */
    public void setNoticeImage(String value) {
        setAttributeInternal(NOTICEIMAGE, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Number getCreatedBy() {
        return (Number) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public Number getUpdatedBy() {
        return (Number) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(Number value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for NoticeTitle, using the alias name NoticeTitle.
     * @return the value of NoticeTitle
     */
    public String getNoticeTitle() {
        return (String) getAttributeInternal(NOTICETITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoticeTitle.
     * @param value value to set the NoticeTitle
     */
    public void setNoticeTitle(String value) {
        setAttributeInternal(NOTICETITLE, value);
    }

    /**
     * Gets the attribute value for CompanySbuId, using the alias name CompanySbuId.
     * @return the value of CompanySbuId
     */
    public Number getCompanySbuId() {
        return (Number) getAttributeInternal(COMPANYSBUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CompanySbuId.
     * @param value value to set the CompanySbuId
     */
    public void setCompanySbuId(Number value) {
        setAttributeInternal(COMPANYSBUID, value);
    }

    /**
     * @return the associated entity TblAcadYearImpl.
     */
    public TblAcadYearImpl getTblAcadYear() {
        return (TblAcadYearImpl) getAttributeInternal(TBLACADYEAR);
    }

    /**
     * Sets <code>value</code> as the associated entity TblAcadYearImpl.
     */
    public void setTblAcadYear(TblAcadYearImpl value) {
        setAttributeInternal(TBLACADYEAR, value);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal id) {
        return new Key(new Object[] { id });
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        Number userId = null;
        Number cmpnyId = null;
        Number sbuId = null;
         try {
             userId = new Number((String) ADFContext.getCurrent().getSessionScope().get("sessUMID"));
             cmpnyId = new Number((String) ADFContext.getCurrent().getSessionScope().get("sessCmpnyID"));
             sbuId = new Number((String) ADFContext.getCurrent().getSessionScope().get("sessSBUID"));
         } catch(Exception ex) {
             ex.printStackTrace();
         }
         
         if (operation == DML_INSERT) {

             setGroupCompanyId(cmpnyId);
             setCompanySbuId(sbuId);

             setCreatedBy(userId);
             setUpdatedBy(userId);
             } else if(operation == DML_UPDATE) {
             
             setGroupCompanyId(cmpnyId);
             setCompanySbuId(sbuId);
             
             setUpdatedBy(userId);
         }
        super.doDML(operation, e);
    }
}

