package model.ERP.EO;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Mar 18 22:48:40 PDT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TblGradeImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        GroupCompanyId,
        AcadGroupId,
        GradeName,
        KitName,
        Ast,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy,
        CompanySbuId,
        TblEvalWeightage,
        TblAgePolicy,
        TblGradeSubject,
        TblMarksGrading,
        TblSchoolTime,
        TblSections,
        TblStdEnq,
        TblStdReg,
        TblStdRegSib,
        TblAcadGroup,
        TblGradeStaff,
        TblTransFeeGenMaster,
        TblTransFeeGenMaster1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int GROUPCOMPANYID = AttributesEnum.GroupCompanyId.index();
    public static final int ACADGROUPID = AttributesEnum.AcadGroupId.index();
    public static final int GRADENAME = AttributesEnum.GradeName.index();
    public static final int KITNAME = AttributesEnum.KitName.index();
    public static final int AST = AttributesEnum.Ast.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int COMPANYSBUID = AttributesEnum.CompanySbuId.index();
    public static final int TBLEVALWEIGHTAGE = AttributesEnum.TblEvalWeightage.index();
    public static final int TBLAGEPOLICY = AttributesEnum.TblAgePolicy.index();
    public static final int TBLGRADESUBJECT = AttributesEnum.TblGradeSubject.index();
    public static final int TBLMARKSGRADING = AttributesEnum.TblMarksGrading.index();
    public static final int TBLSCHOOLTIME = AttributesEnum.TblSchoolTime.index();
    public static final int TBLSECTIONS = AttributesEnum.TblSections.index();
    public static final int TBLSTDENQ = AttributesEnum.TblStdEnq.index();
    public static final int TBLSTDREG = AttributesEnum.TblStdReg.index();
    public static final int TBLSTDREGSIB = AttributesEnum.TblStdRegSib.index();
    public static final int TBLACADGROUP = AttributesEnum.TblAcadGroup.index();
    public static final int TBLGRADESTAFF = AttributesEnum.TblGradeStaff.index();
    public static final int TBLTRANSFEEGENMASTER = AttributesEnum.TblTransFeeGenMaster.index();
    public static final int TBLTRANSFEEGENMASTER1 = AttributesEnum.TblTransFeeGenMaster1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TblGradeImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.ERP.EO.TblGrade");
    }


    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public BigDecimal getId() {
        return (BigDecimal) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(BigDecimal value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for GroupCompanyId, using the alias name GroupCompanyId.
     * @return the value of GroupCompanyId
     */
    public Number getGroupCompanyId() {
        return (Number) getAttributeInternal(GROUPCOMPANYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GroupCompanyId.
     * @param value value to set the GroupCompanyId
     */
    public void setGroupCompanyId(Number value) {
        setAttributeInternal(GROUPCOMPANYID, value);
    }

    /**
     * Gets the attribute value for AcadGroupId, using the alias name AcadGroupId.
     * @return the value of AcadGroupId
     */
    public BigDecimal getAcadGroupId() {
        return (BigDecimal) getAttributeInternal(ACADGROUPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AcadGroupId.
     * @param value value to set the AcadGroupId
     */
    public void setAcadGroupId(BigDecimal value) {
        setAttributeInternal(ACADGROUPID, value);
    }

    /**
     * Gets the attribute value for GradeName, using the alias name GradeName.
     * @return the value of GradeName
     */
    public String getGradeName() {
        return (String) getAttributeInternal(GRADENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for GradeName.
     * @param value value to set the GradeName
     */
    public void setGradeName(String value) {
        setAttributeInternal(GRADENAME, value);
    }

    /**
     * Gets the attribute value for KitName, using the alias name KitName.
     * @return the value of KitName
     */
    public String getKitName() {
        return (String) getAttributeInternal(KITNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for KitName.
     * @param value value to set the KitName
     */
    public void setKitName(String value) {
        setAttributeInternal(KITNAME, value);
    }

    /**
     * Gets the attribute value for Ast, using the alias name Ast.
     * @return the value of Ast
     */
    public String getAst() {
        return (String) getAttributeInternal(AST);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ast.
     * @param value value to set the Ast
     */
    public void setAst(String value) {
        setAttributeInternal(AST, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Number getCreatedBy() {
        return (Number) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public Number getUpdatedBy() {
        return (Number) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(Number value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for CompanySbuId, using the alias name CompanySbuId.
     * @return the value of CompanySbuId
     */
    public Number getCompanySbuId() {
        return (Number) getAttributeInternal(COMPANYSBUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CompanySbuId.
     * @param value value to set the CompanySbuId
     */
    public void setCompanySbuId(Number value) {
        setAttributeInternal(COMPANYSBUID, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblEvalWeightage() {
        return (RowIterator) getAttributeInternal(TBLEVALWEIGHTAGE);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblAgePolicy() {
        return (RowIterator) getAttributeInternal(TBLAGEPOLICY);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblGradeSubject() {
        return (RowIterator) getAttributeInternal(TBLGRADESUBJECT);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblMarksGrading() {
        return (RowIterator) getAttributeInternal(TBLMARKSGRADING);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblSchoolTime() {
        return (RowIterator) getAttributeInternal(TBLSCHOOLTIME);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblSections() {
        return (RowIterator) getAttributeInternal(TBLSECTIONS);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblStdEnq() {
        return (RowIterator) getAttributeInternal(TBLSTDENQ);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblStdReg() {
        return (RowIterator) getAttributeInternal(TBLSTDREG);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblStdRegSib() {
        return (RowIterator) getAttributeInternal(TBLSTDREGSIB);
    }

    /**
     * @return the associated entity TblAcadGroupImpl.
     */
    public TblAcadGroupImpl getTblAcadGroup() {
        return (TblAcadGroupImpl) getAttributeInternal(TBLACADGROUP);
    }

    /**
     * Sets <code>value</code> as the associated entity TblAcadGroupImpl.
     */
    public void setTblAcadGroup(TblAcadGroupImpl value) {
        setAttributeInternal(TBLACADGROUP, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblGradeStaff() {
        return (RowIterator) getAttributeInternal(TBLGRADESTAFF);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblTransFeeGenMaster1() {
        return (RowIterator) getAttributeInternal(TBLTRANSFEEGENMASTER1);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal id) {
        return new Key(new Object[] { id });
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblTransFeeGenMaster() {
        return (RowIterator) getAttributeInternal(TBLTRANSFEEGENMASTER);
    }


    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        Number userId = null;
        Number cmpnyId = null;
        Number sbuId = null;
         try {
             userId = new Number((String) ADFContext.getCurrent().getSessionScope().get("sessUMID"));
             cmpnyId = new Number((String) ADFContext.getCurrent().getSessionScope().get("sessCmpnyID"));
             sbuId = new Number((String) ADFContext.getCurrent().getSessionScope().get("sessSBUID"));
         } catch(Exception ex) {
             ex.printStackTrace();
         }
         
         if (operation == DML_INSERT) {

             setGroupCompanyId(cmpnyId);
             setCompanySbuId(sbuId);

             setCreatedBy(userId);
             setUpdatedBy(userId);
             } else if(operation == DML_UPDATE) {
             
             setGroupCompanyId(cmpnyId);
             setCompanySbuId(sbuId);
             
             setUpdatedBy(userId);
         }
        super.doDML(operation, e);
    }
}

